{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","className","style","maxWidth","borderBottom","fontSize","border","borderLeft","background","paddingBottom","paddingTop","href","rel","target","size","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e9c5a457.chunk.js","sourcesContent":["import React from 'react';\nimport { HiCode, HiLink, HiTerminal } from 'react-icons/hi';\nimport { FaPython, FaReact } from \"react-icons/fa\";\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './minbin.scss';\n\nfunction App() {\n  return (\n  <div className=\"min-vh-100 d-flex flex-column align-items-center bg-light\">\n    <div className=\"d-flex flex-column justify-content-center align-items-center\" style={{ maxWidth: '1200px' }}>\n      <div className=\"my-4 my-lg-15 container\">\n        <div className=\"pb-4 d-flex\">\n          <h1 className=\"border-teal\" style={{ borderBottom: '6px solid' }}>Hello!</h1>\n        </div>\n        <p style={{ fontSize: '1.5em' }}>\n          My name is Tammy Lam.\n          I'm currently a junior at the University of Houston, pursuing a Bachelors of Science in Mathematics with a concentration in Mathematical Finance.\n          I expect to graduate in Spring 2020.\n        </p>\n        <p style={{ fontSize: '1.5em' }}>\n          I'm interested in applying machine learning to dynamical systems and stochastic processes.\n          Currently, I'm working on modeling chaotic delay dynamical systems using an interconnected collection of reservoirs.\n        </p>\n        <p style={{ fontSize: '1.5em' }}>\n          In the future, I hope to apply my research and explore adversarial training in real-world pricing models.\n        </p>\n      </div>\n      <div className=\"mb-4 mb-lg-15 container\">\n        <h1>Projects</h1>\n        <div className=\"pt-4 row\">\n          <div className=\"my-3 col-12\">\n            <div className=\"card border-uh rounded-0 shadow\" style={{ border: 'none', borderLeft: '5px solid' }}>\n              <div className=\"pt-4 pb-0 d-flex flex-wrap border-0 justify-content-between card-header\" style={{ background: 'transparent' }}>\n                <h3 className=\"card-title\">Predictable Chaos?</h3>\n                <div className=\"d-flex flex-wrap align-items-center\">\n                  <span className=\"mx-2\">Julia</span>\n                  <span className=\"mx-2\">Matlab</span>\n                  <span className=\"mx-2\">Python</span>\n                  <span className=\"mx-2\">React</span>\n                </div>\n              </div>\n              <div className=\"card-body\" style={{ paddingBottom: '0px' }}>\n                <p style={{ fontSize: '1.2em' }}>\n                  Predictable Chaos? is a data science project that strives to predict time-delayed chaotic dynamical systems with machine learning.\n                  The research is conducted in conjunction with Dr. William Ott at the University of Houston and Dr. Bhargav Karamched at Florida State University.\n                  We began working in December 2019 and received funding from UH in Summer 2020.\n                  This is my presentation board for Undergraduate Research Day 2020.\n                </p>\n              </div>\n              <div className=\"pb-4 card-footer d-flex justify-content-end\" style={{ background: 'transparent', border: '0px', paddingBottom: '20px', paddingTop: '0px' }}>\n                <a href=\"https://github.com/minbin/esn\" rel=\"noopener noreferrer\" target=\"_blank\">\n                  <button className=\"mx-2 btn btn-outline-dark\"><HiCode size={20} /><span className=\"ml-2\">Code</span></button>\n                </a>\n                <a href=\"/uh-surf\" rel=\"noopener noreferrer\" target=\"_blank\">\n                  <button className=\"mx-2 btn btn-outline-dark\"><HiLink size={20} /><span className=\"ml-2\">Page</span></button>\n                </a>\n              </div>\n            </div>\n          </div>\n          <div className=\"my-3 col-12 col-lg-6\">\n            <div className=\"card border-tiptap rounded-0 shadow\" style={{ border: 'none', borderLeft: '5px solid' }}>\n              <div className=\"pt-4 pb-0 d-flex flex-wrap border-0 justify-content-between card-header\" style={{ background: 'transparent' }}>\n                <h3 className=\"card-title\">TipTap</h3>\n                <div className=\"d-flex flex-wrap align-items-center\">\n                  <span className=\"mx-2\">React</span>\n                </div>\n              </div>\n              <div className=\"card-body\" style={{ paddingBottom: '0px' }}>\n                <p style={{ fontSize: '1.2em' }}>\n                  TipTap is a simple typing game written in React with Bootstrap4. It has a toggleable word prompt and dark mode.\n                </p>\n              </div>\n              <div className=\"pb-4 card-footer d-flex justify-content-end\" style={{ background: 'transparent', border: '0px', paddingBottom: '20px', paddingTop: '0px' }}>\n                <a href=\"https://github.com/minbin/tiptap\" rel=\"noopener noreferrer\" target=\"_blank\">\n                  <button className=\"mx-2 btn btn-outline-dark\"><HiCode size={20} /><span className=\"ml-2\">Code</span></button>\n                </a>\n                <a href=\"/tiptap\" rel=\"noopener noreferrer\" target=\"_blank\">\n                  <button className=\"mx-2 btn btn-outline-dark\"><HiLink size={20} /><span className=\"ml-2\">Page</span></button>\n                </a>\n              </div>\n            </div>\n          </div>\n          <div className=\"my-3 col-12 col-lg-6\">\n            <div className=\"card border-dark rounded-0 shadow\" style={{ border: 'none', borderLeft: '5px solid' }}>\n              <div className=\"pt-4 pb-0 d-flex flex-wrap border-0 justify-content-between card-header\" style={{ background: 'transparent' }}>\n                <h3 className=\"card-title\">Pinyin Practice</h3>\n                <div className=\"d-flex flex-wrap align-items-center\">\n                  <span className=\"mx-2\">React</span>\n                </div>\n              </div>\n              <div className=\"card-body\" style={{ paddingBottom: '0px' }}>\n                <p style={{ fontSize: '1.2em' }}>\n                  TipTap is a simple typing game written in React with Bootstrap4. It has a toggleable word prompt and dark mode.\n                </p>\n              </div>\n              <div className=\"pb-4 card-footer d-flex justify-content-end\" style={{ background: 'transparent', border: '0px', paddingBottom: '20px', paddingTop: '0px' }}>\n                <a href=\"https://github.com/minbin/pinyin-practice\" rel=\"noopener noreferrer\" target=\"_blank\">\n                  <button className=\"mx-2 btn btn-outline-dark\"><HiCode size={20} /><span className=\"ml-2\">Code</span></button>\n                </a>\n                <a href=\"/pinyin-practice\" rel=\"noopener noreferrer\" target=\"_blank\">\n                  <button className=\"mx-2 btn btn-outline-dark\"><HiLink size={20} /><span className=\"ml-2\">Page</span></button>\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}